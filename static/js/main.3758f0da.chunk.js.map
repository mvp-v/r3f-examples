{"version":3,"sources":["examples/example01.js","examples/example02.js","examples/example03.js","examples/sprite.png","examples/Stats.js","examples/example04.js","examples/pointsShaders.js","examples/router.glb","examples/rack.glb","examples/example05.js","App.js","reportWebVitals.js","index.js"],"names":["Example01","ref","createRef","animate","camera","exampleObject","renderer","scene","requestAnimationFrame","rotation","x","y","render","this","props","fov","near","far","color","THREE","window","innerWidth","innerHeight","setSize","geometry","material","add","controls","OrbitControls","domElement","position","z","current","appendChild","dispose","Component","defaultProps","Scene","exampleObjectRef","useRef","useFrame","useThree","gl","args","attach","Example02","cameraPos","style","height","extend","Box","mesh","useState","hovered","setHover","active","setActive","useSpring","scale","onClick","onPointerOver","onPointerOut","meshPhongMaterial","map","Example03","Stats","StatsImpl","stats","useEffect","showPanel","document","body","dom","removeChild","state","begin","end","rnd","m","w","n","sum","times","random","pointCount","maxSpeed","maxHeight","wide","spriteTexture","useLoader","spriteImage","useMemo","Float32Array","constant","positions","colors","alphas","sizes","speed","maxY","geometryRef","i","setHSL","toArray","forIn","attributes","attr","needsUpdate","computeBoundingSphere","attachObject","array","itemSize","count","transparent","uniforms","pointTexture","value","vertexShader","fragmentShader","blending","depthTest","Example04","sceneSize","orthographic","left","right","top","bottom","fallback","model","GLTFLoader","router","model2","rack","curve1","curve2","curve3","intensity","object","Math","PI","Example05","App","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3758f0da.chunk.js","sourcesContent":["import {Component, createRef} from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n// Three JS documentation https://threejs.org/docs/\r\n\r\nexport default class Example01 extends Component {\r\n  static defaultProps = {\r\n    fov: 75,\r\n    near: 0.1,\r\n    far: 1000,\r\n    color: 0x00ff00,\r\n  }\r\n\r\n  ref = createRef();\r\n\r\n  animate = () => {\r\n    const {animate, camera, exampleObject, renderer, scene} = this;\r\n    requestAnimationFrame(animate);\r\n    exampleObject.rotation.x += 0.01;\r\n    exampleObject.rotation.y += 0.011;\r\n    renderer.render( scene, camera );\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {fov, near, far, color} = this.props;\r\n    // https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene \r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(fov, window.innerWidth / window.innerHeight, near, far);\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.geometry = new THREE.TorusKnotGeometry();\r\n    this.material = new THREE.MeshBasicMaterial( { color } );\r\n    this.exampleObject = new THREE.Mesh(this.geometry, this.material);\r\n    this.scene.add(this.exampleObject);\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.scene.add( new THREE.AxesHelper( 2 ) );\r\n\r\n    this.camera.position.z = 5;\r\n    this.ref.current.appendChild(this.renderer.domElement);\r\n    this.animate();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.controls.dispose();\r\n    this.renderer.dispose();\r\n  }\r\n\r\n  render() {\r\n    return <div ref={this.ref} />;\r\n  }\r\n}\r\n","import {useRef} from 'react';\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {Canvas, extend, useFrame, useThree} from 'react-three-fiber'\r\n\r\nextend({OrbitControls});\r\n\r\nfunction Scene({\r\n  color = 0x00ff00,\r\n}) {\r\n  const exampleObjectRef = useRef();\r\n  //can only be used within the Canvas component\r\n  useFrame(() => {\r\n    exampleObjectRef.current.rotation.x += 0.01;\r\n    exampleObjectRef.current.rotation.y += 0.011;\r\n  });\r\n\r\n  const {camera, gl: { domElement }} = useThree();\r\n\r\n  return (\r\n    <>\r\n      <orbitControls args={[camera, domElement]} />\r\n      <mesh ref={exampleObjectRef}>\r\n        <torusKnotGeometry\r\n          attach='geometry'\r\n        />\r\n        <meshBasicMaterial\r\n          attach='material'\r\n          color={color}\r\n        />\r\n      </mesh>\r\n      <axesHelper args={[2]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Example02({\r\n  fov = 75,\r\n  near = 0.1,\r\n  far = 1000,\r\n  cameraPos = [0, 0, 5],\r\n}) {\r\n  return (\r\n    <Canvas\r\n      style={{height: '100vh'}}\r\n      camera={{\r\n        fov,\r\n        near,\r\n        far,\r\n        position: cameraPos\r\n      }}\r\n    >\r\n      <color attach='background' args={[0]} />\r\n      <Scene />\r\n    </Canvas>\r\n  );\r\n}","import {useRef, useState} from 'react';\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {Canvas, extend, useFrame, useThree} from 'react-three-fiber'\r\nimport { useSpring, animated } from 'react-spring/three';\r\n\r\nextend({OrbitControls});\r\n\r\nfunction Box(props) {\r\n  const mesh = useRef()\r\n\r\n  const [hovered, setHover] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01\r\n  })\r\n\r\n  const { color, scale } = useSpring({\r\n    color: hovered ? 'red' : 'blue',\r\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\r\n  })\r\n\r\n  return (\r\n    <animated.mesh\r\n      {...props}\r\n      scale={scale}\r\n      ref={mesh}\r\n      onClick={() => setActive(!active)}\r\n      onPointerOver={() => setHover(true)}\r\n      onPointerOut={() => setHover(false)}\r\n    >\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      {/* play with materials https://threejs.org/examples/#webgl_materials_envmaps_exr */}\r\n      <animated.meshPhongMaterial color={color} /> \r\n    </animated.mesh>\r\n  )\r\n}\r\n\r\nfunction Scene() {\r\n  const {camera, gl: { domElement }} = useThree();\r\n\r\n  return (\r\n    <>\r\n      <orbitControls args={[camera, domElement]} />\r\n      <ambientLight />\r\n      <spotLight position={[10, 10, 0]} />\r\n      <pointLight position={[10, 10, 10]} />\r\n      {[-2, 0, 2].map((x) =>\r\n        [-2, 0, 2].map((z) => <Box key={`${x}-${z}`} position={[x, 0, z]} />)\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction raycasterFilter(intersections) {\r\n  console.log({intersections});\r\n  return intersections.length ? [intersections[0]] : intersections;\r\n}\r\n\r\nexport default function Example03({\r\n  fov = 75,\r\n  near = 0.1,\r\n  far = 1000,\r\n  cameraPos = [0, 0, 5],\r\n}) {\r\n  return (\r\n    <Canvas\r\n      style={{height: '100vh'}}\r\n      camera={{\r\n        fov,\r\n        near,\r\n        far,\r\n        position: cameraPos\r\n      }}\r\n      // raycaster={{\r\n      //   filter: raycasterFilter\r\n      // }}\r\n    >\r\n      <color attach='background' args={[0]} />\r\n      <Scene />\r\n    </Canvas>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/sprite.56b67e27.png\";","import {useEffect, useState} from 'react';\r\nimport {useFrame} from 'react-three-fiber';\r\nimport StatsImpl from 'three/examples/js/libs/stats.min';\r\n\r\nexport default function Stats() {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    stats.showPanel(0)\r\n    document.body.appendChild(stats.dom)\r\n    return () => document.body.removeChild(stats.dom)\r\n  }, [stats])\r\n  return useFrame(state => {\r\n    stats.begin()\r\n    state.gl.render(state.scene, state.camera)\r\n    stats.end()\r\n  }, 1)\r\n}\r\n","import {Suspense, useMemo, useRef} from 'react';\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {Canvas, extend, useFrame, useLoader, useThree} from 'react-three-fiber'\r\nimport {constant, random, times, sum, forIn} from 'lodash';\r\nimport spriteImage from './sprite.png';\r\nimport * as THREE from 'three';\r\n\r\nimport Stats from './Stats';\r\nimport {fragmentShader, vertexShader} from './pointsShaders';\r\n\r\nextend({OrbitControls});\r\n\r\nfunction rnd(m = 0, w = 1, n = 100) {\r\n  return m + w * sum(times(n, () => random(-0.5, 0.5, true))) / n;\r\n}\r\n\r\nfunction Scene({\r\n  pointCount = 4000,\r\n  maxSpeed = 2.0,\r\n  maxHeight = 400,\r\n  wide = 10,\r\n}) {\r\n  const {camera, gl: { domElement }} = useThree();\r\n  const spriteTexture = useLoader(THREE.TextureLoader, spriteImage);\r\n\r\n  const [positions, colors, alphas, sizes, speed, maxY] = useMemo(\r\n    () => [\r\n      new Float32Array(times(3 * pointCount, constant(0))),\r\n      new Float32Array(times(3 * pointCount, constant(1))),\r\n      new Float32Array(times(pointCount, constant(0.5))),\r\n      new Float32Array(times(pointCount, constant(1))),\r\n      times(pointCount, () => ({x: rnd(0, wide), y: random(1, maxSpeed, true), z: rnd(0, wide)})),\r\n      times(pointCount, () => random(0.1, maxHeight, true)),\r\n    ],\r\n    [pointCount, maxSpeed, maxHeight, wide]\r\n  );\r\n\r\n  const geometryRef = useRef();\r\n\r\n  useFrame(() => {\r\n    const color = new THREE.Color();\r\n    for(let i = 0; i < pointCount; i++) {\r\n      positions[3 * i + 0] += speed[i].x;\r\n      positions[3 * i + 1] += speed[i].y;\r\n      positions[3 * i + 2] += speed[i].z;\r\n      color.setHSL(random(0.0, 0.1), 1, 0.5 + 0.5 * (1 - positions[3 * i + 1] / maxY[i]) ** 2);\r\n      color.toArray(colors, 3 * i);\r\n      if (positions[3 * i + 1] > maxY[i]) {\r\n        positions[3 * i + 0] = \r\n          positions[3 * i + 1] = \r\n            positions[3 * i + 2] = 0;  \r\n      }\r\n      alphas[i] = (1 - positions[3 * i + 1] / maxY[i]) ** 2;\r\n      sizes[i] = 1 + 40 * (positions[3 * i + 1] / maxY[i]) ** 3;\r\n    }\r\n    forIn(geometryRef.current.attributes, (attr) => attr.needsUpdate = true);\r\n    geometryRef.current.computeBoundingSphere();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <orbitControls args={[camera, domElement]} />\r\n      <points>\r\n        <bufferGeometry\r\n          ref={geometryRef}\r\n          attach='geometry'\r\n        >\r\n          <bufferAttribute\r\n            attachObject={['attributes', 'position']}\r\n            array={positions}\r\n            itemSize={3}\r\n            count={pointCount}\r\n          />\r\n          <bufferAttribute\r\n            attachObject={['attributes', 'customColor']}\r\n            array={colors}\r\n            itemSize={3}\r\n            count={pointCount}\r\n          />\r\n          <bufferAttribute\r\n            attachObject={['attributes', 'alpha']}\r\n            array={alphas}\r\n            itemSize={1}\r\n            count={pointCount}\r\n          />\r\n          <bufferAttribute\r\n            attachObject={['attributes', 'size']}\r\n            array={sizes}\r\n            itemSize={1}\r\n            count={pointCount}\r\n          />\r\n        </bufferGeometry>\r\n        <shaderMaterial\r\n          transparent\r\n          attach='material'\r\n          uniforms={{\r\n            pointTexture: { value: spriteTexture },\r\n          }}\r\n          vertexShader={vertexShader}\r\n          fragmentShader={fragmentShader}\r\n          blending={THREE.AdditiveBlending}\r\n          depthTest={false}\r\n        />\r\n      </points>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Example04({\r\n  sceneSize = 200,\r\n  cameraPos = [0, 0, 5],\r\n}) {\r\n  return (\r\n    <Canvas\r\n      orthographic\r\n      style={{height: '100vh'}}\r\n      camera={{\r\n        left: -sceneSize,\r\n        right: sceneSize,\r\n        top: sceneSize,\r\n        bottom: -sceneSize,\r\n        near: -sceneSize,\r\n        far: sceneSize,\r\n        position: cameraPos\r\n      }}\r\n    >\r\n      <Stats />\r\n      <Suspense fallback={null}>\r\n        <color attach='background' args={[0]} />\r\n        <group position={[0, -300, 0]}>\r\n          <Scene />\r\n        </group>\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n}\r\n","export const vertexShader = `\r\nattribute float alpha;\r\nattribute float size;\r\nattribute vec3 customColor;\r\nvarying vec3 vColor;\r\nvarying float vAlpha;\r\nvoid main() {\r\n    vColor = customColor;\r\n    vAlpha = alpha;\r\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n    gl_PointSize = size;\r\n    gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const fragmentShader = `\r\nuniform sampler2D pointTexture;\r\nvarying float vAlpha;\r\nvarying vec3 vColor;\r\nvoid main() {\r\n    gl_FragColor = vec4(vColor, vAlpha) * texture2D(pointTexture, gl_PointCoord);\r\n}\r\n`;\r\n\r\n// https://stackoverflow.com/questions/17537879/in-webgl-what-are-the-differences-between-an-attribute-a-uniform-and-a-varying/17557438#17557438\r\n","export default __webpack_public_path__ + \"static/media/router.d4d02fe9.glb\";","export default __webpack_public_path__ + \"static/media/rack.ebc2ecbb.glb\";","import {Suspense, useMemo, useRef} from 'react';\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {Canvas, extend, useFrame, useLoader, useThree} from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport * as THREE from 'three';\r\n\r\nimport router from './router.glb';\r\nimport rack from './rack.glb';\r\n\r\nextend({OrbitControls});\r\n\r\nfunction Scene({\r\n  color = 0x00ff00,\r\n}) {\r\n  const exampleObjectRef = useRef();\r\n\r\n  const model = useLoader(GLTFLoader, router);\r\n  const model2 = useLoader(GLTFLoader, rack);\r\n\r\n  const {camera, gl: { domElement }} = useThree();\r\n\r\n  const [curve1, curve2, curve3] = useMemo(() => {\r\n    return [\r\n      new THREE.CubicBezierCurve3(\r\n        new THREE.Vector3( -3.1, 0.1, -0.7 ),\r\n        new THREE.Vector3( -3, 0, -3 ),\r\n        new THREE.Vector3( -0.4, 3, -3 ),\r\n        new THREE.Vector3( -0.4, 4, -2 ),\r\n      ),\r\n      new THREE.CubicBezierCurve3(\r\n        new THREE.Vector3( -3.3, 0.1, -0.7 ),\r\n        new THREE.Vector3( -3, 0, -3 ),\r\n        new THREE.Vector3( -1, 4.5, -3 ),\r\n        new THREE.Vector3( -1, 4.5, -2 ),\r\n      ),\r\n      new THREE.CubicBezierCurve3(\r\n        new THREE.Vector3( -3.5, 0.1, -0.7 ),\r\n        new THREE.Vector3( -3.5, 0, -3 ),\r\n        new THREE.Vector3( -1, 3.2, -3 ),\r\n        new THREE.Vector3( -1, 3.2, -2 ),\r\n      ),\r\n    ]\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <orbitControls args={[camera, domElement]} />\r\n      <ambientLight intensity={1} />\r\n      <spotLight position={[20, 20, 20]} />\r\n      <group scale={[10, 10, 10]} position={[-3, -0.8, 0]}>\r\n        <primitive object={model.scene} />\r\n      </group>\r\n      <group scale={[3, 3, 3]} rotation={[0, Math.PI, 0]} position={[0, 0, -2]}>\r\n        <primitive object={model2.scene} />\r\n      </group>\r\n      <mesh>\r\n        <tubeGeometry args={[curve1, 64, 0.02]} />\r\n        <meshPhongMaterial color='red' />\r\n      </mesh>\r\n      <mesh>\r\n        <tubeGeometry args={[curve2, 64, 0.02]} />\r\n        <meshPhongMaterial color='green' />\r\n      </mesh>\r\n      <mesh>\r\n        <tubeGeometry args={[curve3, 64, 0.02]} />\r\n        <meshPhongMaterial color='yellow' />\r\n      </mesh>\r\n      <gridHelper />\r\n      <axesHelper args={[2]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Example05({\r\n  fov = 75,\r\n  near = 0.1,\r\n  far = 1000,\r\n  cameraPos = [0, 0, -5],\r\n}) {\r\n  return (\r\n    <Canvas\r\n      style={{height: '100vh'}}\r\n      camera={{\r\n        fov,\r\n        near,\r\n        far,\r\n        position: cameraPos\r\n      }}\r\n    >\r\n      <Suspense fallback={null}>\r\n        <Scene />\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n}","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport Example01 from './examples/example01';\r\nimport Example02 from './examples/example02';\r\nimport Example03 from './examples/example03';\r\nimport Example04 from './examples/example04';\r\nimport Example05 from './examples/example05';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/example01\">\r\n          <Example01 />\r\n        </Route>\r\n        <Route path=\"/example02\">\r\n          <Example02 />\r\n        </Route>\r\n        <Route path=\"/example03\">\r\n          <Example03 />\r\n        </Route>\r\n        <Route path=\"/example04\">\r\n          <Example04 />\r\n        </Route>\r\n        <Route path=\"/example05\">\r\n          <Example05 />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <nav>\r\n            <ul>\r\n            <li>\r\n                <Link to=\"/example01\">Example #1</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/example02\">Example #2</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/example03\">Example #3</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/example04\">Example #4</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/example05\">Example #5</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>          \r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}